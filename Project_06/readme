The assembler projects consists of two separate lisp source files created and tested using CLISP in a Windows machine.'

The first is parser.lisp, which handles all the file parsing -related tasks
The second is assembler.lisp, which handles the assembling part

Both of them are in their own packages (named parser and assembler).
The assembler package uses the parser package's public interface.
The assembler package exports the assemble function as its public interface.
Thus, when loading the parser and the assembler into the lisp system, to assemble a file, one simply types in:
(assemble "path\\and\\file_name.asm")
The result is output to similarly named file_name.hack -file in the same directory.

I hadn't done much string manipulation in Common LISP in a long time, as probably can be seen by looking at the code, so getting re-familiarized with the most common string manipulation functions took a bit longer than I had anticipated, as did familiarizing myself with the Common LISP package system.
The project itself was tons of fun and getting to work with LISP after a bit of a hiatus was really refreshing. It still could have been finalized into an executable program, and maybe I will do so in the near future. At the moment my free time is being spent on other, more important projects, however.
